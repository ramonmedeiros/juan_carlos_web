{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","magnetURI","WebTorrent","add","torrent","files","find","file","name","endsWith","appendTo","type","id","Button","block","bssize","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ktBAwCeA,E,iKA7Bb,SAAYC,IACG,IAAIC,KAEVC,IAAIF,GAAW,SAAUG,GAEnBA,EAAQC,MAAMC,MAAK,SAAUC,GACtC,OAAOA,EAAKC,KAAKC,SAAS,WAKvBC,SAAS,e,oBAIlB,WACE,OACE,eAAC,WAAD,WACE,8CACA,uBAAOC,KAAK,OAAOC,GAAG,WACtB,cAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,OAAO,QAAQJ,KAAK,SAAlC,4BAGA,qBAAKC,GAAG,kB,GAzBEI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9eb3a867.chunk.js","sourcesContent":["import './App.css';\nimport { Component, Fragment } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport WebTorrent from 'webtorrent';\n\n//const TPB = \"https://thepiratebay-plus.strem.fun/manifest.json\"\n// download files and read it \n// https://www.imdb.com/interfaces/\n\nclass App extends Component {\n\n  startStream(magnetURI) {\n    var client = new WebTorrent()\n\n    client.add(magnetURI, function (torrent) {\n      // Torrents can contain many files. Let's use the .mp4 file\n      var file = torrent.files.find(function (file) {\n        return file.name.endsWith('.mp4')\n      })\n\n      // Display the file by adding it to the DOM.\n      // Supports video, audio, image files, and more!\n      file.appendTo('player')\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1>Search movie</h1>\n        <input type=\"text\" id=\"search\"></input>\n        <Button block bssize=\"large\" type=\"submit\">\n          Search sources\n        </Button>\n        <div id=\"player\"></div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}