{"version":3,"sources":["StreamList.js","App.js","reportWebVitals.js","index.js"],"names":["StreamList","props","imdbId","state","streams","startStream","bind","this","listStreams","fetch","method","then","response","ok","Error","statusText","json","data","generateList","catch","error","console","event","magnetURI","target","parentElement","attributes","infohash","value","WebTorrent","add","torrent","log","files","find","file","name","endsWith","appendTo","items","stream","push","ListItem","button","ListItemText","primary","title","infoHash","onClick","Divider","setState","List","component","aria-label","Component","App","open","options","streamList","searchTitle","fetchList","window","location","href","results","i","length","toLowerCase","includes","timeout","clearTimeout","setTimeout","searchJson","document","getElementById","tconst","classes","className","root","CssBaseline","Container","main","maxWidth","Typography","variant","gutterBottom","Autocomplete","id","style","width","onOpen","onClose","getOptionSelected","option","originalTitle","getOptionLabel","renderTags","renderInput","params","TextField","label","onChange","ev","InputProps","Button","footer","withStyles","theme","display","flexDirection","minHeight","marginTop","spacing","marginBottom","padding","backgroundColor","palette","type","grey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8b672fef.chunk.js","sourcesContent":["import { Component, Fragment } from 'react';\nimport WebTorrent from 'webtorrent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst TPB = \"https://thepiratebay-plus.strem.fun/stream/movie/\"\n\nclass StreamList extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.imdbId = props.imdbId\n\t\tthis.state = { streams: [] }\n\t\tthis.startStream = this.startStream.bind(this)\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.listStreams()\n\t}\n\n\tlistStreams() {\n\t\tfetch(`${TPB}${this.imdbId}.json`, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then(response => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow Error(response.statusText);\n\t\t\t\t}\n\t\t\t\treturn response.json()})\n\t\t\t.then(data => {\n\t\t\t\tthis.generateList(data.streams)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t}\n\n\tstartStream(event) {\n\t\tlet magnetURI = event.target.parentElement.attributes.infohash.value\n\t\tvar client = new WebTorrent()\n\t\t\n\t\tclient.add(magnetURI, function (torrent) {\n\t\t\t// Torrents can contain many files. Let's use the .mp4 file\n\t\t\tdebugger;\n\t\t\tconsole.log(torrent.files)\n\t\t\tvar file = torrent.files.find(function (file) {\n\t\t\t\treturn file.name.endsWith('.mp4')\n\t\t\t})\n\n\t\t\t// Display the file by adding it to the DOM.\n\t\t\t// Supports video, audio, image files, and more!\n\t\t\tfile.appendTo('body')\n\t\t})\n\t}\n\n\tgenerateList(streams) {\n\t\tconst items = []\n\t\tfor (let stream of streams) {\n\t\t\titems.push(<Fragment>\n\t\t\t\t<ListItem button key={stream.infoHash}>\n\t\t\t\t\t<ListItemText key={stream.infoHash}\tprimary={stream.title} infohash={stream.infoHash} onClick={this.startStream} />\n\t\t\t\t</ListItem>\n\t\t\t\t<Divider />\n\t\t\t</Fragment>)\n\t\t}\n\t\tthis.setState({ ...this.state, streams: items })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<List component=\"nav\" aria-label=\"mailbox folders\">\n\t\t\t\t\t{this.state.streams}\n\t\t\t\t</List>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\nexport default StreamList;","import { React, Component } from 'react';\nimport StreamList from './StreamList';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n  },\n});\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.props = props\n    this.state = {\n      open: false,\n      options: [],\n      streamList: [],\n    }\n    this.searchTitle = this.searchTitle.bind(this);\n    this.listStreams = this.listStreams.bind(this)\n    this.data = []\n    this.fetchList()\n  }\n\n  fetchList() {\n    fetch(`${window.location.href}/movies.json`, {\n      method: 'GET',\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.data = data\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n  searchJson(title) {\n    let results = []\n    for (var i = 0; i < this.data.length; i++) {\n      if (this.data[i][\"originalTitle\"].toLowerCase().includes(title.toLowerCase()))\n        results.push(this.data[i]);\n    }\n    return results\n  }\n\n  searchTitle(event) {\n    let title = event.target.value\n    if (this.timeout) clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.setState({ ...this.state, options: this.searchJson(title) });\n    }, 300);\n  }\n\n  listStreams() {\n    let items = this.searchJson(document.getElementById(\"imdb_search\").value)\n    let imdbId = items[0].tconst\n    this.setState({ ...this.state, streamList: <StreamList key={imdbId} imdbId={imdbId} /> })\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n          <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n            WebStremio\n        </Typography>\n          <Autocomplete\n            id=\"imdb_search\"\n            style={{ width: 500 }}\n            open={this.state.open}\n            onOpen={() => { this.setState({ ...this.state, open: true }); }}\n            onClose={() => { this.setState({ ...this.state, open: false }); }}\n            getOptionSelected={(option, value) => option.originalTitle === value.originalTitle}\n            getOptionLabel={option => option.originalTitle}\n            options={this.state.options}\n            renderTags={this.listStreams}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label=\"Type the movie name\"\n                variant=\"outlined\"\n                onChange={ev => { this.searchTitle(ev) }}\n                InputProps={{\n                  ...params.InputProps,\n                }}\n              />\n            )}\n          /><Button variant=\"contained\" onClick={this.listStreams}>Search Available streams</Button>\n          {this.state.streamList}\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"body1\">We love Stremio</Typography>\n          </Container>\n        </footer>\n      </div>\n\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}